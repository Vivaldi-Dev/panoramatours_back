// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Car {
  id           Int        @id @default(autoincrement())
  model        String
  description  String
  image        String
  rents        RentACar[]
  createdAt    DateTime   @default(now())
  mileage      Int 
  fuel         String 
  engine       String 
  seats        Int 
  doors        Int 
  year         Int 
  transmission String 
  price        Float 
}

model RentACar {
  id              Int      @id @default(autoincrement())
  carId           Int
  car             Car      @relation(fields: [carId], references: [id])
  pickupLocation  String
  dropoffLocation String
  pickupDate      DateTime
  dropoffDate     DateTime
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
}

model Activity {
  id          Int             @id @default(autoincrement())
  title       String
  description String?
  date        DateTime        @default(now())
  price       Float
  photos      ActivityPhoto[]
  highlights  Highlight[]     
}

model Highlight {
  id         Int      @id @default(autoincrement())
  text       String
  activity   Activity @relation(fields: [activityId], references: [id])
  activityId Int
}


model ActivityPhoto {
  id         Int      @id @default(autoincrement())
  url        String
  activityId Int
  activity   Activity @relation(fields: [activityId], references: [id], onDelete: Cascade)
}

model TourPackage {
  id              Int             @id @default(autoincrement())
  title           String
  description     String?
  price           Float
  peopleCount     Int
  audienceType    String
  nightsCount     Int
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  photos          TourPhoto[]
  highlights      TourHighlight[]  
}

model TourPhoto {
  id             Int          @id @default(autoincrement())
  url            String
  tourPackageId  Int
  tourPackage    TourPackage  @relation(fields: [tourPackageId], references: [id], onDelete: Cascade)
}

model TourHighlight {
  id             Int          @id @default(autoincrement())
  text           String
  tourPackageId  Int
  tourPackage    TourPackage  @relation(fields: [tourPackageId], references: [id], onDelete: Cascade)
}


model Location {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  latitude  Float?
  longitude Float?
  type      String   
  createdAt DateTime @default(now())
}

